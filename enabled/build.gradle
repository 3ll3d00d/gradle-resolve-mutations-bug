plugins {
    id 'java-library'
    id 'maven-publish'
}

def zipEnable = ext.zipEnabledProp
zipEnable.convention(Boolean.FALSE)

sourceSets {
    integrationTest
}

tasks.register('integrationTest', Test).configure {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

tasks.register('makeZip', Zip, {
    archiveClassifier.set('data')
    from layout.projectDirectory.dir('src/main')
    includeEmptyDirs = true
    onlyIf {
        zipEnable.get()
    }
})

def cleanOutput= tasks.register("cleanExtra", Delete, {
    delete 'build/extra'
})

tasks.register('extraZip', Zip, {
    from 'src/test'
    dependsOn cleanOutput
})

publishing {
    publications {
        extraPackage(MavenPublication) {
            artifactId 'extra'
            artifact tasks.named('extraZip')
        }
    }
}

gradle.projectsEvaluated {
    publishing {
        publications {
            fullPackage(MavenPublication) {
                from components.java
                if (project.ext.zipEnabledProp.get()) {
                    artifact(tasks.named('makeZip'), {classifier = 'data'})
                }
            }
        }
    }
}

if (hasProperty("zipEnable")) {
    logger.lifecycle("zipEnable is set")
    zipEnable.set(Boolean.TRUE)
}
